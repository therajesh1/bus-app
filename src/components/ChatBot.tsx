import React, { useState, useRef, useEffect } from 'react';
import { Button } from './ui/button';
import { Input } from './ui/input';
import { Card, CardContent, CardHeader, CardTitle } from './ui/card';
import { Badge } from './ui/badge';

import { 
  MessageCircle, 
  X, 
  Send, 
  Bot, 
  User, 
  Globe, 
  Mic, 
  MicOff,
  Volume2,
  VolumeX
} from 'lucide-react';

interface ChatBotProps {
  userRole: 'passenger' | 'driver';
}

interface Message {
  id: string;
  text: string;
  sender: 'user' | 'bot';
  timestamp: Date;
  language: string;
}

interface Language {
  code: string;
  name: string;
  flag: string;
}

const languages: Language[] = [
  { code: 'en', name: 'English', flag: 'ЁЯЗоЁЯЗ│' },
  { code: 'hi', name: 'рд╣рд┐рдиреНрджреА', flag: 'ЁЯЗоЁЯЗ│' },
  { code: 'bn', name: 'ржмрж╛ржВрж▓рж╛', flag: 'ЁЯЗоЁЯЗ│' },
  { code: 'ta', name: 'родрооро┐ро┤рпН', flag: 'ЁЯЗоЁЯЗ│' },
  { code: 'te', name: 'р░др▒Жр░▓р▒Бр░Чр▒Б', flag: 'ЁЯЗоЁЯЗ│' },
  { code: 'mr', name: 'рдорд░рд╛рдареА', flag: 'ЁЯЗоЁЯЗ│' },
  { code: 'gu', name: 'ркЧрлБркЬрк░рк╛ркдрлА', flag: 'ЁЯЗоЁЯЗ│' },
  { code: 'kn', name: 'р▓Хр▓ир│Нр▓ир▓б', flag: 'ЁЯЗоЁЯЗ│' }
];

const translations = {
  en: {
    chatTitle: 'BusTracker Assistant',
    typePlaceholder: 'Ask about routes, schedules, or any questions...',
    send: 'Send',
    selectLanguage: 'Select Language',
    voiceOn: 'Voice On',
    voiceOff: 'Voice Off',
    listening: 'Listening...',
    quickReplies: {
      passenger: [
        'When is the next bus?',
        'What routes go to downtown?',
        'Is bus 42A running late?',
        'Set an alarm for my stop',
        'Report a problem'
      ],
      driver: [
        'How do I start a trip?',
        'Update my bus number',
        'Report GPS issues',
        'End my shift',
        'Technical support'
      ]
    }
  },
  hi: {
    chatTitle: 'BusTracker рд╕рд╣рд╛рдпрдХ',
    typePlaceholder: 'рд░реВрдЯ, рд╕рдордп-рд╕рд╛рд░рдгреА рдпрд╛ рдХрд┐рд╕реА рднреА рдкреНрд░рд╢реНрди рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдкреВрдЫреЗрдВ...',
    send: 'рднреЗрдЬреЗрдВ',
    selectLanguage: 'рднрд╛рд╖рд╛ рдЪреБрдиреЗрдВ',
    voiceOn: 'рдЖрд╡рд╛рдЬрд╝ рдЪрд╛рд▓реВ',
    voiceOff: 'рдЖрд╡рд╛рдЬрд╝ рдмрдВрдж',
    listening: 'рд╕реБрди рд░рд╣рд╛ рд╣реИ...',
    quickReplies: {
      passenger: [
        'рдЕрдЧрд▓реА рдмрд╕ рдХрдм рдЖрдПрдЧреА?',
        'рд╢рд╣рд░ рдЬрд╛рдиреЗ рд╡рд╛рд▓реЗ рд░реВрдЯ рдХреМрди рд╕реЗ рд╣реИрдВ?',
        'рдХреНрдпрд╛ 42A рдмрд╕ рджреЗрд░ рд╕реЗ рдЪрд▓ рд░рд╣реА рд╣реИ?',
        'рдореЗрд░реЗ рд╕реНрдЯреЙрдк рдХреЗ рд▓рд┐рдП рдЕрд▓рд╛рд░реНрдо рд╕реЗрдЯ рдХрд░реЗрдВ',
        'рд╕рдорд╕реНрдпрд╛ рдХреА рд░рд┐рдкреЛрд░реНрдЯ рдХрд░реЗрдВ'
      ],
      driver: [
        'рдпрд╛рддреНрд░рд╛ рдХреИрд╕реЗ рд╢реБрд░реВ рдХрд░реВрдВ?',
        'рдмрд╕ рдирдВрдмрд░ рдЕрдкрдбреЗрдЯ рдХрд░реЗрдВ',
        'GPS рд╕рдорд╕реНрдпрд╛рдУрдВ рдХреА рд░рд┐рдкреЛрд░реНрдЯ рдХрд░реЗрдВ',
        'рдЕрдкрдиреА рд╢рд┐рдлреНрдЯ рд╕рдорд╛рдкреНрдд рдХрд░реЗрдВ',
        'рддрдХрдиреАрдХреА рд╕рд╣рд╛рдпрддрд╛'
      ]
    }
  },
  bn: {
    chatTitle: 'BusTracker рж╕рж╣рж╛ржпрж╝ржХ',
    typePlaceholder: 'рж░рзБржЯ, рж╕ржоржпрж╝рж╕рзВржЪрзА ржмрж╛ ржпрзЗржХрзЛржирзЛ ржкрзНрж░рж╢рзНржи рж╕ржорзНржкрж░рзНржХрзЗ ржЬрж┐ржЬрзНржЮрж╛рж╕рж╛ ржХрж░рзБржи...',
    send: 'ржкрж╛ржарж╛ржи',
    selectLanguage: 'ржнрж╛рж╖рж╛ ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзБржи',
    voiceOn: 'ржнржпрж╝рзЗрж╕ ржЪрж╛рж▓рзБ',
    voiceOff: 'ржнржпрж╝рзЗрж╕ ржмржирзНржз',
    listening: 'рж╢рзБржиржЫрзЗ...',
    quickReplies: {
      passenger: [
        'ржкрж░ржмрж░рзНрждрзА ржмрж╛рж╕ ржХржЦржи ржЖрж╕ржмрзЗ?',
        'рж╢рж╣рж░рзЗ ржпрж╛ржУржпрж╝рж╛рж░ рж░рзБржЯ ржХрзЛржиржЧрзБрж▓рзЛ?',
        '42A ржмрж╛рж╕ ржжрзЗрж░рж┐рждрзЗ ржЪрж▓ржЫрзЗ ржХрж┐?',
        'ржЖржорж╛рж░ рж╕рзНржЯржкрзЗрж░ ржЬржирзНржп ржЕрзНржпрж╛рж▓рж╛рж░рзНржо рж╕рзЗржЯ ржХрж░рзБржи',
        'рж╕ржорж╕рзНржпрж╛рж░ рж░рж┐ржкрзЛрж░рзНржЯ ржХрж░рзБржи'
      ],
      driver: [
        'ржХрзАржнрж╛ржмрзЗ ржЯрзНрж░рж┐ржк рж╢рзБрж░рзБ ржХрж░ржм?',
        'ржмрж╛рж╕ ржиржорзНржмрж░ ржЖржкржбрзЗржЯ ржХрж░рзБржи',
        'GPS рж╕ржорж╕рзНржпрж╛рж░ рж░рж┐ржкрзЛрж░рзНржЯ ржХрж░рзБржи',
        'ржЖржорж╛рж░ рж╢рж┐ржлржЯ рж╢рзЗрж╖ ржХрж░рзБржи',
        'ржкрзНрж░ржпрзБржХрзНрждрж┐ржЧржд рж╕рж╣рж╛ржпрж╝рждрж╛'
      ]
    }
  },
  ta: {
    chatTitle: 'BusTracker роЙродро╡ро┐ропро╛ро│ро░рпН',
    typePlaceholder: 'ро╡ро┤ро┐родрпНродроЯроЩрпНроХро│рпН, роЕроЯрпНроЯро╡рогрпИроХро│рпН роЕро▓рпНро▓родрпБ роОроирпНрод роХрпЗро│рпНро╡ро┐роХро│рпИропрпБроорпН роХрпЗро│рпБроЩрпНроХро│рпН...',
    send: 'роЕройрпБрокрпНрокрпБ',
    selectLanguage: 'роорпКро┤ро┐ропрпИродрпН родрпЗро░рпНроирпНродрпЖроЯрпБроХрпНроХро╡рпБроорпН',
    voiceOn: 'роХрпБро░ро▓рпН роЗропроХрпНроХроорпН',
    voiceOff: 'роХрпБро░ро▓рпН роиро┐ро▒рпБродрпНродроорпН',
    listening: 'роХрпЗроЯрпНроЯрпБроХрпНроХрпКрогрпНроЯро┐ро░рпБроХрпНроХро┐ро▒родрпБ...',
    quickReplies: {
      passenger: [
        'роЕроЯрпБродрпНрод рокрпЗро░рпБроирпНродрпБ роОрокрпНрокрпЛродрпБ ро╡ро░рпБроорпН?',
        'роироХро░родрпНродро┐ро▒рпНроХрпБроЪрпН роЪрпЖро▓рпНро▓рпБроорпН ро╡ро┤ро┐родрпНродроЯроЩрпНроХро│рпН роОро╡рпИ?',
        '42A рокрпЗро░рпБроирпНродрпБ родро╛роородрооро╛роХ роУроЯрпБроХро┐ро▒родро╛?',
        'роОройрпН роиро┐ро▒рпБродрпНродродрпНродро┐ро▒рпНроХрпБ роЕро▓ро╛ро░роорпН ро╡рпИроХрпНроХро╡рпБроорпН',
        'роЪро┐роХрпНроХро▓рпИрокрпН рокрпБроХро╛ро░ро│ро┐роХрпНроХро╡рпБроорпН'
      ],
      driver: [
        'рокропрогродрпНродрпИ роОрокрпНрокроЯро┐ родрпКроЯроЩрпНроХрпБро╡родрпБ?',
        'рокрпЗро░рпБроирпНродрпБ роОрогрпНрогрпИрокрпН рокрпБродрпБрокрпНрокро┐роХрпНроХро╡рпБроорпН',
        'GPS роЪро┐роХрпНроХро▓рпНроХро│рпИрокрпН рокрпБроХро╛ро░ро│ро┐роХрпНроХро╡рпБроорпН',
        'роОройрпН ро╖ро┐рокрпНроЯрпИ роорпБроЯро┐роХрпНроХро╡рпБроорпН',
        'родрпКро┤ро┐ро▓рпНроирпБроЯрпНрок роЖродро░ро╡рпБ'
      ]
    }
  },
  te: {
    chatTitle: 'BusTracker р░╕р░╣р░╛р░пр░Хр▒Бр░бр▒Б',
    typePlaceholder: 'р░░р▒Вр░Яр▒Нр░▓р▒Б, р░╖р▒Жр░бр▒Нр░пр▒Вр░▓р▒Нр░╕р▒Н р░▓р▒Зр░жр░╛ р░Пр░╡р▒Ир░ир░╛ р░кр▒Нр░░р░╢р▒Нр░ир░▓ р░Чр▒Бр░░р░┐р░Вр░Ър░┐ р░Ер░бр░Чр░Вр░бр░┐...',
    send: 'р░кр░Вр░кр░Вр░бр░┐',
    selectLanguage: 'р░нр░╛р░╖р░ир▒Б р░Ор░Вр░Ър▒Бр░Хр▒Лр░Вр░бр░┐',
    voiceOn: 'р░╡р░╛р░пр░┐р░╕р▒Н р░Жр░ир▒Н',
    voiceOff: 'р░╡р░╛р░пр░┐р░╕р▒Н р░Жр░лр▒Н',
    listening: 'р░╡р░┐р░Вр░Яр▒Лр░Вр░жр░┐...',
    quickReplies: {
      passenger: [
        'р░др░жр▒Бр░кр░░р░┐ р░мр░╕р▒Н р░Ор░кр▒Нр░кр▒Бр░бр▒Б р░╡р░╕р▒Нр░др▒Бр░Вр░жр░┐?',
        'р░ир░Чр░░р░╛р░ир░┐р░Хр░┐ р░╡р▒Жр░│р▒Нр░│р▒З р░░р▒Вр░Яр▒Нр░▓р▒Б р░Пр░╡р░┐?',
        '42A р░мр░╕р▒Н р░Жр░▓р░╕р▒Нр░пр░Вр░Чр░╛ р░ир░бр▒Бр░╕р▒Нр░др▒Бр░Вр░жр░╛?',
        'р░ир░╛ р░╕р▒Нр░Яр░╛р░кр▒Н р░Хр▒Лр░╕р░В р░Ер░▓р░╛р░░р░В р░╕р▒Жр░Яр▒Н р░Ър▒Зр░пр░Вр░бр░┐',
        'р░╕р░ор░╕р▒Нр░пр░ир▒Б р░░р░┐р░кр▒Лр░░р▒Нр░Яр▒Н р░Ър▒Зр░пр░Вр░бр░┐'
      ],
      driver: [
        'р░Яр▒Нр░░р░┐р░кр▒Н р░Ор░▓р░╛ р░кр▒Нр░░р░╛р░░р░Вр░нр░┐р░Вр░Ър░╛р░▓р░┐?',
        'р░мр░╕р▒Н р░ир░Вр░мр░░р▒Н р░Ер░кр▒Нр░бр▒Зр░Яр▒Н р░Ър▒Зр░пр░Вр░бр░┐',
        'GPS р░╕р░ор░╕р▒Нр░пр░▓р░ир▒Б р░░р░┐р░кр▒Лр░░р▒Нр░Яр▒Н р░Ър▒Зр░пр░Вр░бр░┐',
        'р░ир░╛ р░╖р░┐р░лр▒Нр░Яр▒Н р░ор▒Бр░Чр░┐р░Вр░Ър░Вр░бр░┐',
        'р░╕р░╛р░Вр░Хр▒Зр░др░┐р░Х р░ор░жр▒Нр░жр░др▒Б'
      ]
    }
  },
  mr: {
    chatTitle: 'BusTracker рд╕рд╣рд╛рдпреНрдпрдХ',
    typePlaceholder: 'рдорд╛рд░реНрдЧ, рд╡реЗрд│рд╛рдкрддреНрд░рдХ рдХрд┐рдВрд╡рд╛ рдХреЛрдгрддреНрдпрд╛рд╣реА рдкреНрд░рд╢реНрдирд╛рдВрдмрджреНрджрд▓ рд╡рд┐рдЪрд╛рд░рд╛...',
    send: 'рдкрд╛рдард╡рд╛',
    selectLanguage: 'рднрд╛рд╖рд╛ рдирд┐рд╡рдбрд╛',
    voiceOn: 'рдЖрд╡рд╛рдЬ рдЪрд╛рд▓реВ',
    voiceOff: 'рдЖрд╡рд╛рдЬ рдмрдВрдж',
    listening: 'рдРрдХрдд рдЖрд╣реЗ...',
    quickReplies: {
      passenger: [
        'рдкреБрдврдЪреА рдмрд╕ рдХрдзреА рдпреЗрдИрд▓?',
        'рд╢рд╣рд░рд╛рдд рдЬрд╛рдгрд╛рд░реЗ рдорд╛рд░реНрдЧ рдХреЛрдгрддреЗ?',
        '42A рдмрд╕ рдЙрд╢рд┐рд░рд╛ рдЪрд╛рд▓реВ рдЖрд╣реЗ рдХрд╛?',
        'рдорд╛рдЭреНрдпрд╛ рд╕реНрдЯреЙрдкрд╕рд╛рдареА рдЕрд▓рд╛рд░реНрдо рд╕реЗрдЯ рдХрд░рд╛',
        'рд╕рдорд╕реНрдпреЗрдЪреА рддрдХреНрд░рд╛рд░ рдХрд░рд╛'
      ],
      driver: [
        'рдЯреНрд░рд┐рдк рдХрд╢реА рд╕реБрд░реВ рдХрд░рд╛рд╡реА?',
        'рдмрд╕ рдирдВрдмрд░ рдЕрдкрдбреЗрдЯ рдХрд░рд╛',
        'GPS рд╕рдорд╕реНрдпрд╛рдВрдЪреА рддрдХреНрд░рд╛рд░ рдХрд░рд╛',
        'рдорд╛рдЭреА рд╢рд┐рдлреНрдЯ рд╕рдВрдкрд╡рд╛',
        'рддрд╛рдВрддреНрд░рд┐рдХ рдорджрдд'
      ]
    }
  },
  gu: {
    chatTitle: 'BusTracker рк╕рк╣рк╛ркпркХ',
    typePlaceholder: 'рк░рлВркЯрлНрк╕, рк╢рлЗркбрлНркпрлВрк▓рлНрк╕ ркЕркерк╡рк╛ ркХрлЛркИрккркг рккрлНрк░рк╢рлНркирлЛ рк╡рк┐рк╢рлЗ рккрлВркЫрлЛ...',
    send: 'ркорлЛркХрк▓рлЛ',
    selectLanguage: 'ркнрк╛рк╖рк╛ рккрк╕ркВркж ркХрк░рлЛ',
    voiceOn: 'рк╡рлЙркЗрк╕ ркЪрк╛рк▓рлБ',
    voiceOff: 'рк╡рлЙркЗрк╕ ркмркВркз',
    listening: 'рк╕рк╛ркВркнрк│рлА рк░рк╣рлНркпрлБркВ ркЫрлЗ...',
    quickReplies: {
      passenger: [
        'ркЖркЧрк│ркирлА ркмрк╕ ркХрлНркпрк╛рк░рлЗ ркЖрк╡рк╢рлЗ?',
        'рк╢рк╣рлЗрк░ркорк╛ркВ ркЬрк╡рк╛ркирк╛ рк░рлВркЯрлНрк╕ ркХркпрк╛ ркЫрлЗ?',
        '42A ркмрк╕ ркорлЛркбрлА ркЪрк╛рк▓рлА рк░рк╣рлА ркЫрлЗ?',
        'ркорк╛рк░рк╛ рк╕рлНркЯрлЛркк ркорк╛ркЯрлЗ ркЕрк▓рк╛рк░рлНрко рк╕рлЗркЯ ркХрк░рлЛ',
        'рк╕ркорк╕рлНркпрк╛ркирлА ркЬрк╛ркг ркХрк░рлЛ'
      ],
      driver: [
        'ркЯрлНрк░рк┐ркк ркХрлЗрк╡рлА рк░рлАркдрлЗ рк╢рк░рлВ ркХрк░рк╡рлА?',
        'ркмрк╕ ркиркВркмрк░ ркЕрккркбрлЗркЯ ркХрк░рлЛ',
        'GPS рк╕ркорк╕рлНркпрк╛ркУркирлА ркЬрк╛ркг ркХрк░рлЛ',
        'ркорк╛рк░рлА рк╢рк┐рклрлНркЯ рк╕ркорк╛рккрлНркд ркХрк░рлЛ',
        'ркЯрлЗркХркирк┐ркХрк▓ рк╕рккрлЛрк░рлНркЯ'
      ]
    }
  },
  kn: {
    chatTitle: 'BusTracker р▓╕р▓╣р▓╛р▓пр▓Х',
    typePlaceholder: 'р▓ор▓╛р▓░р│Нр▓Чр▓Чр▓│р│Б, р▓╡р│Зр▓│р▓╛р▓кр▓Яр│Нр▓Яр▓┐р▓Чр▓│р│Б р▓Ер▓ер▓╡р▓╛ р▓пр▓╛р▓╡р│Бр▓жр│З р▓кр│Нр▓░р▓╢р│Нр▓ир│Жр▓Чр▓│ р▓мр▓Чр│Нр▓Чр│Ж р▓Хр│Зр▓│р▓┐...',
    send: 'р▓Хр▓│р│Бр▓╣р▓┐р▓╕р▓┐',
    selectLanguage: 'р▓нр▓╛р▓╖р│Жр▓пр▓ир│Нр▓ир│Б р▓Жр▓пр│Нр▓Хр│Жр▓ор▓╛р▓бр▓┐',
    voiceOn: 'р▓зр│Нр▓╡р▓ир▓┐ р▓Жр▓ир│Н',
    voiceOff: 'р▓зр│Нр▓╡р▓ир▓┐ р▓Жр▓лр│Н',
    listening: 'р▓Хр│Зр▓│р│Бр▓др│Нр▓др▓┐р▓жр│Ж...',
    quickReplies: {
      passenger: [
        'р▓ор│Бр▓Вр▓жр▓┐р▓и р▓мр▓╕р│Н р▓пр▓╛р▓╡р▓╛р▓Ч р▓мр▓░р│Бр▓др│Нр▓др▓жр│Ж?',
        'р▓ир▓Чр▓░р▓Хр│Нр▓Хр│Ж р▓╣р│Лр▓Чр│Бр▓╡ р▓ор▓╛р▓░р│Нр▓Чр▓Чр▓│р│Б р▓пр▓╛р▓╡р│Бр▓╡р│Б?',
        '42A р▓мр▓╕р│Н р▓др▓бр▓╡р▓╛р▓Чр▓┐ р▓Ур▓бр│Бр▓др│Нр▓др▓┐р▓жр│Жр▓пр│З?',
        'р▓ир▓ир│Нр▓и р▓ир▓┐р▓▓р│Нр▓жр▓╛р▓гр▓Хр│Нр▓Хр│Ж р▓Ер▓▓р▓╛р▓░р▓В р▓╣р│Кр▓Вр▓жр▓┐р▓╕р▓┐',
        'р▓╕р▓ор▓╕р│Нр▓пр│Жр▓пр▓ир│Нр▓ир│Б р▓╡р▓░р▓жр▓┐ р▓ор▓╛р▓бр▓┐'
      ],
      driver: [
        'р▓кр│Нр▓░р▓пр▓╛р▓гр▓╡р▓ир│Нр▓ир│Б р▓╣р│Зр▓Чр│Ж р▓кр│Нр▓░р▓╛р▓░р▓Вр▓нр▓┐р▓╕р│Бр▓╡р│Бр▓жр│Б?',
        'р▓мр▓╕р│Н р▓╕р▓Вр▓Цр│Нр▓пр│Жр▓пр▓ир│Нр▓ир│Б р▓ир▓╡р│Ар▓Хр▓░р▓┐р▓╕р▓┐',
        'GPS р▓╕р▓ор▓╕р│Нр▓пр│Жр▓Чр▓│р▓ир│Нр▓ир│Б р▓╡р▓░р▓жр▓┐ р▓ор▓╛р▓бр▓┐',
        'р▓ир▓ир│Нр▓и р▓╢р▓┐р▓лр│Нр▓Яр│Н р▓ор│Бр▓Чр▓┐р▓╕р▓┐',
        'р▓др▓╛р▓Вр▓др│Нр▓░р▓┐р▓Х р▓мр│Жр▓Вр▓мр▓▓'
      ]
    }
  }
};

const responses = {
  en: {
    greeting: "Hello! I'm your BusTracker assistant. How can I help you today?",
    nextBus: "The next bus on your route is arriving in 8 minutes. Would you like me to set a notification?",
    routes: "Here are the routes to downtown: 42A (8 min), 15B (15 min), 23C (22 min). Which one would you like to track?",
    busStatus: "Bus 42A is currently running 3 minutes late due to traffic on Main St. The updated ETA is 11 minutes.",
    setAlarm: "I'd be happy to help you set an alarm! Which bus and stop would you like to be notified about?",
    problem: "I'm sorry to hear about the issue. Please describe the problem and I'll help you report it to our support team.",
    startTrip: "To start a trip: 1) Make sure your bus number is correct, 2) Press the green 'Start Trip' button, 3) GPS tracking will begin automatically.",
    updateBus: "To update your bus number, tap the 'Edit' button next to your current bus number and enter the new number.",
    gpsIssues: "If you're experiencing GPS issues, try: 1) Check your location permissions, 2) Restart the app, 3) Contact support if the problem persists.",
    endShift: "To end your shift, press the red 'End Trip' button. This will stop GPS tracking and log your trip duration.",
    support: "For technical support, you can: 1) Check our FAQ section, 2) Contact support at support@bustracker.com, 3) Call our 24/7 helpline.",
    default: "I understand you're asking about bus services. Could you please be more specific about what you need help with?"
  },
  hi: {
    greeting: "рдирдорд╕реНрддреЗ! рдореИрдВ рдЖрдкрдХрд╛ BusTracker рд╕рд╣рд╛рдпрдХ рд╣реВрдВред рдЖрдЬ рдореИрдВ рдЖрдкрдХреА рдХреИрд╕реЗ рдорджрдж рдХрд░ рд╕рдХрддрд╛ рд╣реВрдВ?",
    nextBus: "рдЖрдкрдХреЗ рд░реВрдЯ рдкрд░ рдЕрдЧрд▓реА рдмрд╕ 8 рдорд┐рдирдЯ рдореЗрдВ рдЖ рд░рд╣реА рд╣реИред рдХреНрдпрд╛ рдЖрдк рдЪрд╛рд╣рддреЗ рд╣реИрдВ рдХрд┐ рдореИрдВ рдПрдХ рдиреЛрдЯрд┐рдлрд┐рдХреЗрд╢рди рд╕реЗрдЯ рдХрд░ рджреВрдВ?",
    routes: "рд╢рд╣рд░ рдЬрд╛рдиреЗ рд╡рд╛рд▓реЗ рд░реВрдЯ рд╣реИрдВ: 42A (8 рдорд┐рдирдЯ), 15B (15 рдорд┐рдирдЯ), 23C (22 рдорд┐рдирдЯ)ред рдЖрдк рдХреМрди рд╕рд╛ рдЯреНрд░реИрдХ рдХрд░рдирд╛ рдЪрд╛рд╣рддреЗ рд╣реИрдВ?",
    busStatus: "рдмрд╕ 42A рдореБрдЦреНрдп рд╕рдбрд╝рдХ рдкрд░ рдЯреНрд░реИрдлрд┐рдХ рдХреЗ рдХрд╛рд░рдг 3 рдорд┐рдирдЯ рджреЗрд░реА рд╕реЗ рдЪрд▓ рд░рд╣реА рд╣реИред рдЕрдкрдбреЗрдЯреЗрдб ETA 11 рдорд┐рдирдЯ рд╣реИред",
    setAlarm: "рдореИрдВ рдЕрд▓рд╛рд░реНрдо рд╕реЗрдЯ рдХрд░рдиреЗ рдореЗрдВ рдЖрдкрдХреА рдорджрдж рдХрд░реВрдВрдЧрд╛! рдЖрдк рдХрд┐рд╕ рдмрд╕ рдФрд░ рд╕реНрдЯреЙрдк рдХреЗ рд▓рд┐рдП рдиреЛрдЯрд┐рдлрд┐рдХреЗрд╢рди рдЪрд╛рд╣рддреЗ рд╣реИрдВ?",
    problem: "рд╕рдорд╕реНрдпрд╛ рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рд╕реБрдирдХрд░ рджреБрдЦ рд╣реБрдЖред рдХреГрдкрдпрд╛ рд╕рдорд╕реНрдпрд╛ рдХрд╛ рд╡рд░реНрдгрди рдХрд░реЗрдВ рдФрд░ рдореИрдВ рдЗрд╕реЗ рд╣рдорд╛рд░реА рд╕рдкреЛрд░реНрдЯ рдЯреАрдо рдХреЛ рд░рд┐рдкреЛрд░реНрдЯ рдХрд░рдиреЗ рдореЗрдВ рдорджрдж рдХрд░реВрдВрдЧрд╛ред",
    startTrip: "рдпрд╛рддреНрд░рд╛ рд╢реБрд░реВ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП: 1) рд╕реБрдирд┐рд╢реНрдЪрд┐рдд рдХрд░реЗрдВ рдХрд┐ рдЖрдкрдХрд╛ рдмрд╕ рдирдВрдмрд░ рд╕рд╣реА рд╣реИ, 2) рд╣рд░реЗ 'рдпрд╛рддреНрд░рд╛ рд╢реБрд░реВ рдХрд░реЗрдВ' рдмрдЯрди рдХреЛ рджрдмрд╛рдПрдВ, 3) GPS рдЯреНрд░реИрдХрд┐рдВрдЧ рдЕрдкрдиреЗ рдЖрдк рд╢реБрд░реВ рд╣реЛ рдЬрд╛рдПрдЧреАред",
    updateBus: "рдмрд╕ рдирдВрдмрд░ рдЕрдкрдбреЗрдЯ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП, рдЕрдкрдиреЗ рд╡рд░реНрддрдорд╛рди рдмрд╕ рдирдВрдмрд░ рдХреЗ рдкрд╛рд╕ 'рд╕рдВрдкрд╛рджрд┐рдд рдХрд░реЗрдВ' рдмрдЯрди рдкрд░ рдЯреИрдк рдХрд░реЗрдВ рдФрд░ рдирдпрд╛ рдирдВрдмрд░ рджрд░реНрдЬ рдХрд░реЗрдВред",
    gpsIssues: "рдпрджрд┐ рдЖрдкрдХреЛ GPS рд╕рдорд╕реНрдпрд╛рдПрдВ рдЖ рд░рд╣реА рд╣реИрдВ, рддреЛ рдХреЛрд╢рд┐рд╢ рдХрд░реЗрдВ: 1) рдЕрдкрдиреА рд▓реЛрдХреЗрд╢рди рдкрд░рдорд┐рд╢рди рдЪреЗрдХ рдХрд░реЗрдВ, 2) рдРрдк рдХреЛ рд░реАрд╕реНрдЯрд╛рд░реНрдЯ рдХрд░реЗрдВ, 3) рд╕рдорд╕реНрдпрд╛ рдмрдиреА рд░рд╣рдиреЗ рдкрд░ рд╕рдкреЛрд░реНрдЯ рд╕реЗ рд╕рдВрдкрд░реНрдХ рдХрд░реЗрдВред",
    endShift: "рдЕрдкрдиреА рд╢рд┐рдлреНрдЯ рд╕рдорд╛рдкреНрдд рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП, рд▓рд╛рд▓ 'рдпрд╛рддреНрд░рд╛ рд╕рдорд╛рдкреНрдд рдХрд░реЗрдВ' рдмрдЯрди рджрдмрд╛рдПрдВред рдпрд╣ GPS рдЯреНрд░реИрдХрд┐рдВрдЧ рдмрдВрдж рдХрд░ рджреЗрдЧрд╛ рдФрд░ рдЖрдкрдХреА рдпрд╛рддреНрд░рд╛ рдХреА рдЕрд╡рдзрд┐ рд▓реЙрдЧ рдХрд░реЗрдЧрд╛ред",
    support: "рддрдХрдиреАрдХреА рд╕рд╣рд╛рдпрддрд╛ рдХреЗ рд▓рд┐рдП, рдЖрдк рдХрд░ рд╕рдХрддреЗ рд╣реИрдВ: 1) рд╣рдорд╛рд░рд╛ FAQ рд╕реЗрдХреНрд╢рди рджреЗрдЦреЗрдВ, 2) support@bustracker.com рдкрд░ рд╕рдкреЛрд░реНрдЯ рд╕реЗ рд╕рдВрдкрд░реНрдХ рдХрд░реЗрдВ, 3) рд╣рдорд╛рд░реА 24/7 рд╣реЗрд▓реНрдкрд▓рд╛рдЗрди рдХреЙрд▓ рдХрд░реЗрдВред",
    default: "рдореИрдВ рд╕рдордЭ рдЧрдпрд╛ рдХрд┐ рдЖрдк рдмрд╕ рд╕реЗрд╡рд╛рдУрдВ рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдкреВрдЫ рд░рд╣реЗ рд╣реИрдВред рдХреНрдпрд╛ рдЖрдк рдХреГрдкрдпрд╛ рдмрддрд╛ рд╕рдХрддреЗ рд╣реИрдВ рдХрд┐ рдЖрдкрдХреЛ рдХрд┐рд╕ рдЪреАрдЬрд╝ рдореЗрдВ рдорджрдж рдЪрд╛рд╣рд┐рдП?"
  },
  bn: {
    greeting: "ржиржорж╕рзНржХрж╛рж░! ржЖржорж┐ ржЖржкржирж╛рж░ BusTracker рж╕рж╣рж╛ржпрж╝ржХред ржЖржЬ ржЖржорж┐ ржЖржкржирж╛ржХрзЗ ржХрзАржнрж╛ржмрзЗ рж╕рж╛рж╣рж╛ржпрзНржп ржХрж░рждрзЗ ржкрж╛рж░рж┐?",
    nextBus: "ржЖржкржирж╛рж░ рж░рзБржЯрзЗрж░ ржкрж░ржмрж░рзНрждрзА ржмрж╛рж╕ рзо ржорж┐ржирж┐ржЯрзЗ ржЖрж╕ржЫрзЗред ржЖржкржирж┐ ржХрж┐ ржЪрж╛ржи ржЖржорж┐ ржПржХржЯрж┐ ржирзЛржЯрж┐ржлрж┐ржХрзЗрж╢ржи рж╕рзЗржЯ ржХрж░рж┐?",
    routes: "рж╢рж╣рж░рзЗ ржпрж╛ржУржпрж╝рж╛рж░ рж░рзБржЯржЧрзБрж▓рзЛ рж╣рж▓рзЛ: 42A (рзо ржорж┐ржирж┐ржЯ), 15B (рззрзл ржорж┐ржирж┐ржЯ), 23C (рзирзи ржорж┐ржирж┐ржЯ)ред ржЖржкржирж┐ ржХрзЛржиржЯрж┐ ржЯрзНрж░рзНржпрж╛ржХ ржХрж░рждрзЗ ржЪрж╛ржи?",
    busStatus: "ржмрж╛рж╕ 42A ржорзЗржЗржи рж╕рзНржЯрзНрж░рж┐ржЯрзЗ ржЯрзНрж░рж╛ржлрж┐ржХрзЗрж░ ржХрж╛рж░ржгрзЗ рзй ржорж┐ржирж┐ржЯ ржжрзЗрж░рж┐рждрзЗ ржЪрж▓ржЫрзЗред ржЖржкржбрзЗржЯрзЗржб ETA рззрзз ржорж┐ржирж┐ржЯред",
    setAlarm: "ржЖржорж┐ ржЕрзНржпрж╛рж▓рж╛рж░рзНржо рж╕рзЗржЯ ржХрж░рждрзЗ рж╕рж╛рж╣рж╛ржпрзНржп ржХрж░ржм! ржЖржкржирж┐ ржХрзЛржи ржмрж╛рж╕ ржПржмржВ рж╕рзНржЯржкрзЗрж░ ржЬржирзНржп ржирзЛржЯрж┐ржлрж┐ржХрзЗрж╢ржи ржЪрж╛ржи?",
    problem: "рж╕ржорж╕рзНржпрж╛рж░ ржХржерж╛ рж╢рзБржирзЗ ржжрзБржГржЦрж┐рждред ржжржпрж╝рж╛ ржХрж░рзЗ рж╕ржорж╕рзНржпрж╛ржЯрж┐ ржмрж░рзНржгржирж╛ ржХрж░рзБржи ржПржмржВ ржЖржорж┐ ржЖржорж╛ржжрзЗрж░ рж╕рж╛ржкрзЛрж░рзНржЯ ржЯрж┐ржорзЗ рж░рж┐ржкрзЛрж░рзНржЯ ржХрж░рждрзЗ рж╕рж╛рж╣рж╛ржпрзНржп ржХрж░ржмред",
    startTrip: "ржЯрзНрж░рж┐ржк рж╢рзБрж░рзБ ржХрж░рждрзЗ: рзз) ржирж┐рж╢рзНржЪрж┐ржд ржХрж░рзБржи ржЖржкржирж╛рж░ ржмрж╛рж╕ ржиржорзНржмрж░ рж╕ржарж┐ржХ, рзи) рж╕ржмрзБржЬ 'ржЯрзНрж░рж┐ржк рж╢рзБрж░рзБ ржХрж░рзБржи' ржмрж╛ржЯржи ржЪрж╛ржкрзБржи, рзй) GPS ржЯрзНрж░рзНржпрж╛ржХрж┐ржВ рж╕рзНржмржпрж╝ржВржХрзНрж░рж┐ржпрж╝ржнрж╛ржмрзЗ рж╢рзБрж░рзБ рж╣ржмрзЗред",
    updateBus: "ржмрж╛рж╕ ржиржорзНржмрж░ ржЖржкржбрзЗржЯ ржХрж░рждрзЗ, ржЖржкржирж╛рж░ ржмрж░рзНрждржорж╛ржи ржмрж╛рж╕ ржиржорзНржмрж░рзЗрж░ ржкрж╛рж╢рзЗ 'рж╕ржорзНржкрж╛ржжржирж╛' ржмрж╛ржЯржирзЗ ржЯрзНржпрж╛ржк ржХрж░рзБржи ржПржмржВ ржирждрзБржи ржиржорзНржмрж░ ржжрж┐ржиред",
    gpsIssues: "ржпржжрж┐ GPS рж╕ржорж╕рзНржпрж╛ рж╣ржпрж╝, ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзБржи: рзз) ржЖржкржирж╛рж░ рж▓рзЛржХрзЗрж╢ржи ржкрж╛рж░ржорж┐рж╢ржи ржЪрзЗржХ ржХрж░рзБржи, рзи) ржЕрзНржпрж╛ржк рж░рж┐рж╕рзНржЯрж╛рж░рзНржЯ ржХрж░рзБржи, рзй) рж╕ржорж╕рзНржпрж╛ ржЕржмрзНржпрж╛рж╣ржд ржерж╛ржХрж▓рзЗ рж╕рж╛ржкрзЛрж░рзНржЯрзЗ ржпрзЛржЧрж╛ржпрзЛржЧ ржХрж░рзБржиред",
    endShift: "ржЖржкржирж╛рж░ рж╢рж┐ржлржЯ рж╢рзЗрж╖ ржХрж░рждрзЗ, рж▓рж╛рж▓ 'ржЯрзНрж░рж┐ржк рж╢рзЗрж╖ ржХрж░рзБржи' ржмрж╛ржЯржи ржЪрж╛ржкрзБржиред ржПржЯрж┐ GPS ржЯрзНрж░рзНржпрж╛ржХрж┐ржВ ржмржирзНржз ржХрж░ржмрзЗ ржПржмржВ ржЖржкржирж╛рж░ ржЯрзНрж░рж┐ржкрзЗрж░ рж╕ржоржпрж╝ рж▓ржЧ ржХрж░ржмрзЗред",
    support: "ржкрзНрж░ржпрзБржХрзНрждрж┐ржЧржд рж╕рж╣рж╛ржпрж╝рждрж╛рж░ ржЬржирзНржп: рзз) ржЖржорж╛ржжрзЗрж░ FAQ ржмрж┐ржнрж╛ржЧ ржжрзЗржЦрзБржи, рзи) support@bustracker.com ржП рж╕рж╛ржкрзЛрж░рзНржЯрзЗ ржпрзЛржЧрж╛ржпрзЛржЧ ржХрж░рзБржи, рзй) ржЖржорж╛ржжрзЗрж░ рзирзк/рзн рж╣рзЗрж▓рзНржкрж▓рж╛ржЗржирзЗ ржХрж▓ ржХрж░рзБржиред",
    default: "ржЖржорж┐ ржмрзБржЭрждрзЗ ржкрж╛рж░ржЫрж┐ ржЖржкржирж┐ ржмрж╛рж╕ рж╕рзЗржмрж╛ рж╕ржорзНржкрж░рзНржХрзЗ ржЬрж┐ржЬрзНржЮрж╛рж╕рж╛ ржХрж░ржЫрзЗржиред ржЖржкржирж┐ ржХрзА ржирж┐ржпрж╝рзЗ рж╕рж╛рж╣рж╛ржпрзНржп ржЪрж╛ржи рждрж╛ ржЖрж░ржУ рж╕рзНржкрж╖рзНржЯ ржХрж░рзЗ ржмрж▓рждрзЗ ржкрж╛рж░рзЗржи?"
  },
  ta: {
    greeting: "ро╡рогроХрпНроХроорпН! роиро╛ройрпН роЙроЩрпНроХро│рпН BusTracker роЙродро╡ро┐ропро╛ро│ро░рпН. роЗройрпНро▒рпБ роиро╛ройрпН роЙроЩрпНроХро│рпБроХрпНроХрпБ роОрокрпНрокроЯро┐ роЙродро╡ роорпБроЯро┐ропрпБроорпН?",
    nextBus: "роЙроЩрпНроХро│рпН рокро╛родрпИропро┐ро▓рпН роЕроЯрпБродрпНрод рокрпЗро░рпБроирпНродрпБ 8 роиро┐рооро┐роЯроЩрпНроХро│ро┐ро▓рпН ро╡ро░рпБроорпН. роиро╛ройрпН роТро░рпБ роЕро▒ро┐ро╡ро┐рокрпНрокрпИ роЕроорпИроХрпНроХ ро╡рпЗрогрпНроЯрпБрооро╛?",
    routes: "роироХро░родрпНродро┐ро▒рпНроХрпБ роЪрпЖро▓рпНро▓рпБроорпН ро╡ро┤ро┐родрпНродроЯроЩрпНроХро│рпН: 42A (8 роиро┐рооро┐роЯроорпН), 15B (15 роиро┐рооро┐роЯроорпН), 23C (22 роиро┐рооро┐роЯроорпН). роОродрпИ роХрогрпНроХро╛рогро┐роХрпНроХ ро╡ро┐ро░рпБроорпНрокрпБроХро┐ро▒рпАро░рпНроХро│рпН?",
    busStatus: "рокрпЗро░рпБроирпНродрпБ 42A роорпЖропро┐ройрпН ро╕рпНроЯрпНро░рпАроЯрпНроЯро┐ро▓рпН роЯрпНро░ро╛роГрокро┐роХрпН роХро╛ро░рогрооро╛роХ 3 роиро┐рооро┐роЯроЩрпНроХро│рпН родро╛роородрооро╛роХ роУроЯрпБроХро┐ро▒родрпБ. рокрпБродрпБрокрпНрокро┐роХрпНроХрокрпНрокроЯрпНроЯ ETA 11 роиро┐рооро┐роЯроЩрпНроХро│рпН.",
    setAlarm: "роиро╛ройрпН роЕро▓ро╛ро░роорпН роЕроорпИроХрпНроХ роЙродро╡рпБроХро┐ро▒рпЗройрпН! роОроирпНрод рокрпЗро░рпБроирпНродрпБ рооро▒рпНро▒рпБроорпН роиро┐ро▒рпБродрпНродродрпНродро┐ро▒рпНроХрпБ роЕро▒ро┐ро╡ро┐рокрпНрокрпБ ро╡рпЗрогрпНроЯрпБроорпН?",
    problem: "роЪро┐роХрпНроХро▓рпН рокро▒рпНро▒ро┐ роХрпЗроЯрпНроЯрпБ ро╡ро░рпБроирпНродрпБроХро┐ро▒рпЗройрпН. родропро╡рпБроЪрпЖропрпНродрпБ роЪро┐роХрпНроХро▓рпИ ро╡ро┐ро╡ро░ро┐родрпНродрпБ, роОроЩрпНроХро│рпН роЖродро░ро╡рпБ роХрпБро┤рпБро╡ро┐роЯроорпН рокрпБроХро╛ро░ро│ро┐роХрпНроХ роЙродро╡рпБроХро┐ро▒рпЗройрпН.",
    startTrip: "рокропрогродрпНродрпИродрпН родрпКроЯроЩрпНроХ: 1) роЙроЩрпНроХро│рпН рокрпЗро░рпБроирпНродрпБ роОрогрпН роЪро░ро┐ропро╛ройродро╛ роОройрпНрокродрпИ роЙро▒рпБродро┐роЪрпЖропрпНропрпБроЩрпНроХро│рпН, 2) рокроЪрпНроЪрпИ 'рокропрогродрпНродрпИродрпН родрпКроЯроЩрпНроХрпБ' рокроЯрпНроЯройрпИ роЕро┤рпБродрпНродрпБроЩрпНроХро│рпН, 3) GPS роХрогрпНроХро╛рогро┐рокрпНрокрпБ родро╛ройро╛роХро╡рпЗ родрпКроЯроЩрпНроХрпБроорпН.",
    updateBus: "рокрпЗро░рпБроирпНродрпБ роОрогрпНрогрпИрокрпН рокрпБродрпБрокрпНрокро┐роХрпНроХ, роЙроЩрпНроХро│рпН родро▒рпНрокрпЛродрпИроп рокрпЗро░рпБроирпНродрпБ роОрогрпНрогро┐ройрпН роЕро░рпБроХро┐ро▓рпН роЙро│рпНро│ 'родро┐ро░рпБродрпНродрпБ' рокроЯрпНроЯройрпИродрпН родроЯрпНроЯро┐ рокрпБродро┐роп роОрогрпНрогрпИ роЙро│рпНро│ро┐роЯрпБроЩрпНроХро│рпН.",
    gpsIssues: "GPS роЪро┐роХрпНроХро▓рпНроХро│рпН роЗро░рпБроирпНродро╛ро▓рпН, роорпБропро▒рпНроЪро┐роХрпНроХро╡рпБроорпН: 1) роЙроЩрпНроХро│рпН роЗро░рпБрокрпНрокро┐роЯ роЕройрпБроородро┐роХро│рпИроЪрпН роЪро░ро┐рокро╛ро░рпНроХрпНроХро╡рпБроорпН, 2) роЖрокрпНро╕рпИ рооро▒рпБродрпКроЯроХрпНроХроорпН роЪрпЖропрпНропро╡рпБроорпН, 3) роЪро┐роХрпНроХро▓рпН родрпКроЯро░рпНроирпНродро╛ро▓рпН роЖродро░ро╡рпИродрпН родрпКроЯро░рпНрокрпБ роХрпКро│рпНро│ро╡рпБроорпН.",
    endShift: "роЙроЩрпНроХро│рпН ро╖ро┐рокрпНроЯрпНроЯрпИ роорпБроЯро┐роХрпНроХ, роЪро┐ро╡рокрпНрокрпБ 'рокропрогродрпНродрпИ роорпБроЯро┐' рокроЯрпНроЯройрпИ роЕро┤рпБродрпНродрпБроЩрпНроХро│рпН. роЗродрпБ GPS роХрогрпНроХро╛рогро┐рокрпНрокрпИ роиро┐ро▒рпБродрпНродро┐ роЙроЩрпНроХро│рпН рокропрог роирпЗро░родрпНродрпИ рокродро┐ро╡рпБ роЪрпЖропрпНропрпБроорпН.",
    support: "родрпКро┤ро┐ро▓рпНроирпБроЯрпНрок роЖродро░ро╡ро┐ро▒рпНроХрпБ: 1) роОроЩрпНроХро│рпН FAQ рокро┐ро░ро┐ро╡рпИрокрпН рокро╛ро░рпНроХрпНроХро╡рпБроорпН, 2) support@bustracker.com роЗро▓рпН роЖродро░ро╡рпИродрпН родрпКроЯро░рпНрокрпБ роХрпКро│рпНро│ро╡рпБроорпН, 3) роОроЩрпНроХро│рпН 24/7 роЙродро╡ро┐ роОрогрпНрогрпИ роЕро┤рпИроХрпНроХро╡рпБроорпН.",
    default: "роирпАроЩрпНроХро│рпН рокрпЗро░рпБроирпНродрпБ роЪрпЗро╡рпИроХро│рпН рокро▒рпНро▒ро┐ роХрпЗроЯрпНроХро┐ро▒рпАро░рпНроХро│рпН роОройрпНрокродрпИ роиро╛ройрпН рокрпБро░ро┐роирпНродрпБроХрпКро│рпНроХро┐ро▒рпЗройрпН. роЙроЩрпНроХро│рпБроХрпНроХрпБ роОройрпНрой роЙродро╡ро┐ родрпЗро╡рпИ роОройрпНрокродрпИ роЗройрпНройрпБроорпН роХрпБро▒ро┐рокрпНрокро╛роХ роЪрпКро▓рпНро▓ роорпБроЯро┐ропрпБрооро╛?"
  },
  te: {
    greeting: "р░ир░ор░╕р▒Нр░Хр░╛р░░р░В! р░ир▒Зр░ир▒Б р░ор▒А BusTracker р░╕р░╣р░╛р░пр░Хр▒Бр░бр░ир▒Б. р░Ир░░р▒Лр░Ьр▒Б р░ир▒Зр░ир▒Б р░ор▒Ар░Хр▒Б р░Ор░▓р░╛ р░╕р░╣р░╛р░пр░В р░Ър▒Зр░пр░Чр░▓р░ир▒Б?",
    nextBus: "р░ор▒А р░░р▒Вр░Яр▒НтАМр░▓р▒Л р░др░жр▒Бр░кр░░р░┐ р░мр░╕р▒Н 8 р░ир░┐р░ор░┐р░╖р░╛р░▓р▒Нр░▓р▒Л р░╡р░╕р▒Нр░др▒Бр░Вр░жр░┐. р░ир▒Зр░ир▒Б р░ир▒Лр░Яр░┐р░лр░┐р░Хр▒Зр░╖р░ир▒Н р░╕р▒Жр░Яр▒Н р░Ър▒Зр░пр░╛р░▓р░╛?",
    routes: "р░ир░Чр░░р░╛р░ир░┐р░Хр░┐ р░╡р▒Жр░│р▒Нр░│р▒З р░░р▒Вр░Яр▒Нр░▓р▒Б: 42A (8 р░ир░┐р░ор░┐р░╖р░╛р░▓р▒Б), 15B (15 р░ир░┐р░ор░┐р░╖р░╛р░▓р▒Б), 23C (22 р░ир░┐р░ор░┐р░╖р░╛р░▓р▒Б). р░ор▒Ар░░р▒Б р░Пр░жр░┐ р░Яр▒Нр░░р░╛р░Хр▒Н р░Ър▒Зр░пр░╛р░▓р░ир▒Бр░Хр▒Бр░Вр░Яр▒Бр░ир▒Нр░ир░╛р░░р▒Б?",
    busStatus: "р░мр░╕р▒Н 42A р░ор▒Жр░пр░┐р░ир▒Н р░╕р▒Нр░Яр▒Нр░░р▒Ар░Яр▒НтАМр░▓р▒Л р░Яр▒Нр░░р░╛р░лр░┐р░Хр▒Н р░Хр░╛р░░р░гр░Вр░Чр░╛ 3 р░ир░┐р░ор░┐р░╖р░╛р░▓р▒Б р░Жр░▓р░╕р▒Нр░пр░Вр░Чр░╛ р░ир░бр▒Бр░╕р▒Нр░др▒Бр░Вр░жр░┐. р░Ер░кр▒НтАМр░бр▒Зр░Яр▒Н р░Ър▒Зр░╕р░┐р░и ETA 11 р░ир░┐р░ор░┐р░╖р░╛р░▓р▒Б.",
    setAlarm: "р░ир▒Зр░ир▒Б р░Ер░▓р░╛р░░р░В р░╕р▒Жр░Яр▒Н р░Ър▒Зр░пр░бр░Вр░▓р▒Л р░╕р░╣р░╛р░пр░В р░Ър▒Зр░╕р▒Нр░др░╛р░ир▒Б! р░ор▒Ар░░р▒Б р░П р░мр░╕р▒Н р░ор░░р░┐р░пр▒Б р░╕р▒Нр░Яр░╛р░кр▒Н р░Хр▒Лр░╕р░В р░ир▒Лр░Яр░┐р░лр░┐р░Хр▒Зр░╖р░ир▒Н р░Хр░╛р░╡р░╛р░▓р░┐?",
    problem: "р░╕р░ор░╕р▒Нр░п р░Чр▒Бр░░р░┐р░Вр░Ър░┐ р░╡р░┐р░ир░┐ р░мр░╛р░зр░кр░бр▒Нр░бр░╛р░ир▒Б. р░жр░пр░Ър▒Зр░╕р░┐ р░╕р░ор░╕р▒Нр░пр░ир▒Б р░╡р░┐р░╡р░░р░┐р░Вр░Ър░Вр░бр░┐ р░ор░░р░┐р░пр▒Б р░ор░╛ р░╕р░кр▒Лр░░р▒Нр░Яр▒Н р░Яр▒Ар░ор▒НтАМр░Хр▒Б р░░р░┐р░кр▒Лр░░р▒Нр░Яр▒Н р░Ър▒Зр░пр░бр░Вр░▓р▒Л р░╕р░╣р░╛р░пр░В р░Ър▒Зр░╕р▒Нр░др░╛р░ир▒Б.",
    startTrip: "р░Яр▒Нр░░р░┐р░кр▒Н р░кр▒Нр░░р░╛р░░р░Вр░нр░┐р░Вр░Ър░бр░╛р░ир░┐р░Хр░┐: 1) р░ор▒А р░мр░╕р▒Н р░ир░Вр░мр░░р▒Н р░╕р░░р▒Ир░ир░жр▒Зр░ир░ир░┐ р░ир░┐р░░р▒Нр░зр░╛р░░р░┐р░Вр░Ър▒Бр░Хр▒Лр░Вр░бр░┐, 2) р░Жр░Хр▒Бр░кр░Ър▒Нр░Ъ 'р░Яр▒Нр░░р░┐р░кр▒Н р░кр▒Нр░░р░╛р░░р░Вр░нр░┐р░Вр░Ър▒Б' р░мр░Яр░ир▒Н р░ир▒Кр░Хр▒Нр░Хр░Вр░бр░┐, 3) GPS р░Яр▒Нр░░р░╛р░Хр░┐р░Вр░Чр▒Н р░╕р▒Нр░╡р░пр░Вр░Ър░╛р░▓р░Хр░Вр░Чр░╛ р░кр▒Нр░░р░╛р░░р░Вр░нр░ор░╡р▒Бр░др▒Бр░Вр░жр░┐.",
    updateBus: "р░мр░╕р▒Н р░ир░Вр░мр░░р▒Н р░Ер░кр▒НтАМр░бр▒Зр░Яр▒Н р░Ър▒Зр░пр░бр░╛р░ир░┐р░Хр░┐, р░ор▒А р░кр▒Нр░░р░╕р▒Нр░др▒Бр░д р░мр░╕р▒Н р░ир░Вр░мр░░р▒Н р░кр░Хр▒Нр░Хр░и р░Йр░ир▒Нр░и 'р░Ор░бр░┐р░Яр▒Н' р░мр░Яр░ир▒НтАМр░ир▒Б р░ир▒Кр░Хр▒Нр░Хр░┐ р░Хр▒Кр░др▒Нр░д р░ир░Вр░мр░░р▒Н р░Ор░Вр░Яр░░р▒Н р░Ър▒Зр░пр░Вр░бр░┐.",
    gpsIssues: "GPS р░╕р░ор░╕р▒Нр░пр░▓р▒Б р░Йр░Вр░Яр▒З, р░кр▒Нр░░р░пр░др▒Нр░ир░┐р░Вр░Ър░Вр░бр░┐: 1) р░ор▒А р░▓р▒Кр░Хр▒Зр░╖р░ир▒Н р░Ер░ир▒Бр░ор░др▒Бр░▓р░ир▒Б р░др░ир░┐р░Цр▒А р░Ър▒Зр░пр░Вр░бр░┐, 2) р░пр░╛р░кр▒НтАМр░ир▒Б р░░р▒Ар░╕р▒Нр░Яр░╛р░░р▒Нр░Яр▒Н р░Ър▒Зр░пр░Вр░бр░┐, 3) р░╕р░ор░╕р▒Нр░п р░Хр▒Кр░ир░╕р░╛р░Чр░┐р░др▒З р░╕р░кр▒Лр░░р▒Нр░Яр▒НтАМр░ир▒Б р░╕р░Вр░кр▒Нр░░р░жр░┐р░Вр░Ър░Вр░бр░┐.",
    endShift: "р░ор▒А р░╖р░┐р░лр▒Нр░Яр▒Н р░ор▒Бр░Чр░┐р░Вр░Ър░бр░╛р░ир░┐р░Хр░┐, р░Ор░░р▒Бр░кр▒Б 'р░Яр▒Нр░░р░┐р░кр▒Н р░ор▒Бр░Чр░┐р░Вр░Ър▒Б' р░мр░Яр░ир▒Н р░ир▒Кр░Хр▒Нр░Хр░Вр░бр░┐. р░Зр░жр░┐ GPS р░Яр▒Нр░░р░╛р░Хр░┐р░Вр░Чр▒НтАМр░ир▒Б р░Жр░кр░┐ р░ор▒А р░Яр▒Нр░░р░┐р░кр▒Н р░╡р▒Нр░пр░╡р░зр░┐р░ир░┐ р░▓р░╛р░Чр▒Н р░Ър▒Зр░╕р▒Нр░др▒Бр░Вр░жр░┐.",
    support: "р░╕р░╛р░Вр░Хр▒Зр░др░┐р░Х р░ор░жр▒Нр░жр░др▒Б р░Хр▒Лр░╕р░В: 1) р░ор░╛ FAQ р░╡р░┐р░нр░╛р░Чр░╛р░ир▒Нр░ир░┐ р░Ър▒Вр░бр░Вр░бр░┐, 2) support@bustracker.com р░╡р░жр▒Нр░ж р░╕р░кр▒Лр░░р▒Нр░Яр▒НтАМр░ир▒Б р░╕р░Вр░кр▒Нр░░р░жр░┐р░Вр░Ър░Вр░бр░┐, 3) р░ор░╛ 24/7 р░╣р▒Жр░▓р▒Нр░кр▒НтАМр░▓р▒Ир░ир▒НтАМр░Хр▒Б р░Хр░╛р░▓р▒Н р░Ър▒Зр░пр░Вр░бр░┐.",
    default: "р░ор▒Ар░░р▒Б р░мр░╕р▒Н р░╕р▒Зр░╡р░▓ р░Чр▒Бр░░р░┐р░Вр░Ър░┐ р░Ер░бр▒Бр░Чр▒Бр░др▒Бр░ир▒Нр░ир░╛р░░р░ир░┐ р░ир▒Зр░ир▒Б р░Ер░░р▒Нр░ер░В р░Ър▒Зр░╕р▒Бр░Хр▒Бр░ир▒Нр░ир░╛р░ир▒Б. р░ор▒Ар░Хр▒Б р░П р░╡р░┐р░╖р░пр░Вр░▓р▒Л р░╕р░╣р░╛р░пр░В р░Хр░╛р░╡р░╛р░▓р▒Л р░ор░░р░┐р░Вр░д р░╕р▒Нр░кр░╖р▒Нр░Яр░Вр░Чр░╛ р░Ър▒Жр░кр▒Нр░кр░Чр░▓р░░р░╛?"
  },
  mr: {
    greeting: "рдирдорд╕реНрдХрд╛рд░! рдореА рддреБрдордЪрд╛ BusTracker рд╕рд╣рд╛рдпреНрдпрдХ рдЖрд╣реЗ. рдЖрдЬ рдореА рддреБрдореНрд╣рд╛рд▓рд╛ рдХрд╢реА рдорджрдд рдХрд░реВ рд╢рдХрддреЛ?",
    nextBus: "рддреБрдордЪреНрдпрд╛ рдорд╛рд░реНрдЧрд╛рд╡рд░реАрд▓ рдкреБрдврдЪреА рдмрд╕ 8 рдорд┐рдирд┐рдЯрд╛рдВрдд рдпреЗрдд рдЖрд╣реЗ. рдореА рдПрдХ рдиреЛрдЯрд┐рдлрд┐рдХреЗрд╢рди рд╕реЗрдЯ рдХрд░реВ рдХрд╛?",
    routes: "рд╢рд╣рд░рд╛рдд рдЬрд╛рдгрд╛рд░реЗ рдорд╛рд░реНрдЧ: 42A (8 рдорд┐рдирд┐рдЯреЗ), 15B (15 рдорд┐рдирд┐рдЯреЗ), 23C (22 рдорд┐рдирд┐рдЯреЗ). рддреБрдореНрд╣реА рдХреЛрдгрддрд╛ рдЯреНрд░реЕрдХ рдХрд░реВ рдЗрдЪреНрдЫрд┐рддрд╛?",
    busStatus: "рдмрд╕ 42A рдореЗрди рд╕реНрдЯреНрд░реАрдЯрд╡рд░реАрд▓ рдЯреНрд░реЕрдлрд┐рдХрдореБрд│реЗ 3 рдорд┐рдирд┐рдЯреЗ рдЙрд╢рд┐рд░рд╛ рдЪрд╛рд▓рд▓реА рдЖрд╣реЗ. рдЕрдкрдбреЗрдЯреЗрдб ETA 11 рдорд┐рдирд┐рдЯреЗ рдЖрд╣реЗ.",
    setAlarm: "рдореА рдЕрд▓рд╛рд░реНрдо рд╕реЗрдЯ рдХрд░рдгреНрдпрд╛рдд рдорджрдд рдХрд░рддреЛ! рддреБрдореНрд╣рд╛рд▓рд╛ рдХреЛрдгрддреНрдпрд╛ рдмрд╕ рдЖрдгрд┐ рд╕реНрдЯреЙрдкрд╕рд╛рдареА рдиреЛрдЯрд┐рдлрд┐рдХреЗрд╢рди рд╣рд╡реЗ?",
    problem: "рд╕рдорд╕реНрдпреЗрдмрджреНрджрд▓ рдРрдХреВрди рд╡рд╛рдИрдЯ рд╡рд╛рдЯрд▓реЗ. рдХреГрдкрдпрд╛ рд╕рдорд╕реНрдпреЗрдЪреЗ рд╡рд░реНрдгрди рдХрд░рд╛ рдЖрдгрд┐ рдореА рдЖрдордЪреНрдпрд╛ рд╕рдкреЛрд░реНрдЯ рдЯреАрдорд▓рд╛ рд░рд┐рдкреЛрд░реНрдЯ рдХрд░рдгреНрдпрд╛рдд рдорджрдд рдХрд░рддреЛ.",
    startTrip: "рдЯреНрд░рд┐рдк рд╕реБрд░реВ рдХрд░рдгреНрдпрд╛рд╕рд╛рдареА: 1) рддреБрдордЪрд╛ рдмрд╕ рдирдВрдмрд░ рдмрд░реЛрдмрд░ рдЕрд╕рд▓реНрдпрд╛рдЪреА рдЦрд╛рддреНрд░реА рдХрд░рд╛, 2) рд╣рд┐рд░рд╡реЗ 'рдЯреНрд░рд┐рдк рд╕реБрд░реВ рдХрд░рд╛' рдмрдЯрдг рджрд╛рдмрд╛, 3) GPS рдЯреНрд░реЕрдХрд┐рдВрдЧ рдЖрдкреЛрдЖрдк рд╕реБрд░реВ рд╣реЛрдИрд▓.",
    updateBus: "рдмрд╕ рдирдВрдмрд░ рдЕрдкрдбреЗрдЯ рдХрд░рдгреНрдпрд╛рд╕рд╛рдареА, рддреБрдордЪреНрдпрд╛ рд╕рдзреНрдпрд╛рдЪреНрдпрд╛ рдмрд╕ рдирдВрдмрд░рдЪреНрдпрд╛ рдмрд╛рдЬреВрд▓рд╛ 'рдПрдбрд┐рдЯ' рдмрдЯрдгрд╛рд╡рд░ рдЯреЕрдк рдХрд░рд╛ рдЖрдгрд┐ рдирд╡реАрди рдирдВрдмрд░ рдПрдВрдЯрд░ рдХрд░рд╛.",
    gpsIssues: "GPS рд╕рдорд╕реНрдпрд╛ рдЕрд╕рд▓реНрдпрд╛рд╕, рдкреНрд░рдпрддреНрди рдХрд░рд╛: 1) рддреБрдордЪреНрдпрд╛ рд▓реЛрдХреЗрд╢рди рдкрд░рд╡рд╛рдирдЧреНрдпрд╛ рддрдкрд╛рд╕рд╛, 2) рдЕреЕрдк рд░реАрд╕реНрдЯрд╛рд░реНрдЯ рдХрд░рд╛, 3) рд╕рдорд╕реНрдпрд╛ рдХрд╛рдпрдо рд░рд╛рд╣рд┐рд▓реНрдпрд╛рд╕ рд╕рдкреЛрд░реНрдЯрд╢реА рд╕рдВрдкрд░реНрдХ рд╕рд╛рдзрд╛.",
    endShift: "рддреБрдордЪреА рд╢рд┐рдлреНрдЯ рд╕рдВрдкрд╡рдгреНрдпрд╛рд╕рд╛рдареА, рд▓рд╛рд▓ 'рдЯреНрд░рд┐рдк рд╕рдВрдкрд╡рд╛' рдмрдЯрдг рджрд╛рдмрд╛. рд╣реЗ GPS рдЯреНрд░реЕрдХрд┐рдВрдЧ рдерд╛рдВрдмрд╡реЗрд▓ рдЖрдгрд┐ рддреБрдордЪреНрдпрд╛ рдЯреНрд░рд┐рдкрдЪрд╛ рдХрд╛рд▓рд╛рд╡рдзреА рд▓реЙрдЧ рдХрд░реЗрд▓.",
    support: "рддрд╛рдВрддреНрд░рд┐рдХ рдорджрддреАрд╕рд╛рдареА: 1) рдЖрдордЪрд╛ FAQ рд╡рд┐рднрд╛рдЧ рдкрд╣рд╛, 2) support@bustracker.com рд╡рд░ рд╕рдкреЛрд░реНрдЯрд╢реА рд╕рдВрдкрд░реНрдХ рд╕рд╛рдзрд╛, 3) рдЖрдордЪреНрдпрд╛ 24/7 рд╣реЗрд▓реНрдкрд▓рд╛рдЗрдирд▓рд╛ рдХреЙрд▓ рдХрд░рд╛.",
    default: "рддреБрдореНрд╣реА рдмрд╕ рд╕реЗрд╡рд╛рдВрдмрджреНрджрд▓ рд╡рд┐рдЪрд╛рд░рдд рдЖрд╣рд╛рдд рд╣реЗ рдорд▓рд╛ рд╕рдордЬрддреЗ. рддреБрдореНрд╣рд╛рд▓рд╛ рдХреЛрдгрддреНрдпрд╛ рдЧреЛрд╖реНрдЯреАрдд рдорджрдд рд╣рд╡реА рдЖрд╣реЗ рддреЗ рдЕрдзрд┐рдХ рд╕реНрдкрд╖реНрдЯрдкрдгреЗ рд╕рд╛рдВрдЧреВ рд╢рдХрд╛рд▓ рдХрд╛?"
  },
  gu: {
    greeting: "ркиркорк╕рлНркдрлЗ! рк╣рлБркВ ркдркорк╛рк░рлЛ BusTracker рк╕рк╣рк╛ркпркХ ркЫрлБркВ. ркЖркЬрлЗ рк╣рлБркВ ркдркорк╛рк░рлА ркХрлЗрк╡рлА рк░рлАркдрлЗ ркоркжркж ркХрк░рлА рк╢ркХрлБркВ?",
    nextBus: "ркдркорк╛рк░рк╛ рк░рлВркЯ рккрк░ ркЖркЧрк│ркирлА ркмрк╕ 8 ркорк┐ркирк┐ркЯркорк╛ркВ ркЖрк╡рлА рк░рк╣рлА ркЫрлЗ. рк╢рлБркВ ркдркорлЗ ркЪрк╛рк╣рлЛ ркЫрлЛ ркХрлЗ рк╣рлБркВ ркПркХ ркирлЛркЯрк┐рклрк┐ркХрлЗрк╢рки рк╕рлЗркЯ ркХрк░рлБркВ?",
    routes: "рк╢рк╣рлЗрк░ркорк╛ркВ ркЬрк╡рк╛ркирк╛ рк░рлВркЯрлНрк╕: 42A (8 ркорк┐ркирк┐ркЯ), 15B (15 ркорк┐ркирк┐ркЯ), 23C (22 ркорк┐ркирк┐ркЯ). ркдркорлЗ ркХркпрк╛ рк░рлВркЯркирлЗ ркЯрлНрк░рлЗркХ ркХрк░рк╡рк╛ ркорк╛ркВркЧрлЛ ркЫрлЛ?",
    busStatus: "ркмрк╕ 42A ркорлЗркИрки рк╕рлНркЯрлНрк░рлАркЯ рккрк░ ркЯрлНрк░рк╛рклрк┐ркХркирлЗ ркХрк╛рк░ркгрлЗ 3 ркорк┐ркирк┐ркЯ ркорлЛркбрлА ркЪрк╛рк▓рлА рк░рк╣рлА ркЫрлЗ. ркЕрккркбрлЗркЯрлЗркб ETA 11 ркорк┐ркирк┐ркЯ ркЫрлЗ.",
    setAlarm: "рк╣рлБркВ ркЕрк▓рк╛рк░рлНрко рк╕рлЗркЯ ркХрк░рк╡рк╛ркорк╛ркВ ркоркжркж ркХрк░рлАрк╢! ркдркоркирлЗ ркХркИ ркмрк╕ ркЕркирлЗ рк╕рлНркЯрлЛркк ркорк╛ркЯрлЗ ркирлЛркЯрк┐рклрк┐ркХрлЗрк╢рки ркЬрлЛркИркП ркЫрлЗ?",
    problem: "рк╕ркорк╕рлНркпрк╛ рк╡рк┐рк╢рлЗ рк╕рк╛ркВркнрк│рлАркирлЗ ркжрлБркГркЦ ркеркпрлБркВ. ркХрлГрккрк╛ ркХрк░рлАркирлЗ рк╕ркорк╕рлНркпрк╛ркирлБркВ рк╡рк░рлНркгрки ркХрк░рлЛ ркЕркирлЗ рк╣рлБркВ ркЕркорк╛рк░рлА рк╕рккрлЛрк░рлНркЯ ркЯрлАркоркирлЗ рк░рк┐рккрлЛрк░рлНркЯ ркХрк░рк╡рк╛ркорк╛ркВ ркоркжркж ркХрк░рлАрк╢.",
    startTrip: "ркЯрлНрк░рк┐ркк рк╢рк░рлВ ркХрк░рк╡рк╛ ркорк╛ркЯрлЗ: 1) ркЦрк╛ркдрк░рлА ркХрк░рлЛ ркХрлЗ ркдркорк╛рк░рлЛ ркмрк╕ ркиркВркмрк░ рк╕рк╛ркЪрлЛ ркЫрлЗ, 2) рк▓рлАрк▓рк╛ 'ркЯрлНрк░рк┐ркк рк╢рк░рлВ ркХрк░рлЛ' ркмркЯрки ркжркмрк╛рк╡рлЛ, 3) GPS ркЯрлНрк░рлЗркХрк┐ркВркЧ ркЖрккрлЛркЖркк рк╢рк░рлВ ркерк╢рлЗ.",
    updateBus: "ркмрк╕ ркиркВркмрк░ ркЕрккркбрлЗркЯ ркХрк░рк╡рк╛ ркорк╛ркЯрлЗ, ркдркорк╛рк░рк╛ рк╡рк░рлНркдркорк╛рки ркмрк╕ ркиркВркмрк░ркирлА ркмрк╛ркЬрлБркирк╛ 'ркПркбрк┐ркЯ' ркмркЯрки рккрк░ ркЯрлЗркк ркХрк░рлЛ ркЕркирлЗ ркирк╡рлЛ ркиркВркмрк░ ркжрк╛ркЦрк▓ ркХрк░рлЛ.",
    gpsIssues: "GPS рк╕ркорк╕рлНркпрк╛ркУ рк╣рлЛркп ркдрлЛ, рккрлНрк░ркпрк╛рк╕ ркХрк░рлЛ: 1) ркдркорк╛рк░рлА рк▓рлЛркХрлЗрк╢рки рккрк░ркорк┐рк╢рки ркЪрлЗркХ ркХрк░рлЛ, 2) ркЕрлЗркк рк░рк┐рк╕рлНркЯрк╛рк░рлНркЯ ркХрк░рлЛ, 3) рк╕ркорк╕рлНркпрк╛ ркЪрк╛рк▓рлБ рк░рк╣рлЗ ркдрлЛ рк╕рккрлЛрк░рлНркЯркирлЛ рк╕ркВрккрк░рлНркХ ркХрк░рлЛ.",
    endShift: "ркдркорк╛рк░рлА рк╢рк┐рклрлНркЯ рк╕ркорк╛рккрлНркд ркХрк░рк╡рк╛ ркорк╛ркЯрлЗ, рк▓рк╛рк▓ 'ркЯрлНрк░рк┐ркк рк╕ркорк╛рккрлНркд ркХрк░рлЛ' ркмркЯрки ркжркмрк╛рк╡рлЛ. ркЖ GPS ркЯрлНрк░рлЗркХрк┐ркВркЧ ркмркВркз ркХрк░рк╢рлЗ ркЕркирлЗ ркдркорк╛рк░рк╛ ркЯрлНрк░рк┐рккркирлЛ рк╕ркоркп рк▓рлЛркЧ ркХрк░рк╢рлЗ.",
    support: "ркЯрлЗркХркирк┐ркХрк▓ рк╕рккрлЛрк░рлНркЯ ркорк╛ркЯрлЗ: 1) ркЕркорк╛рк░рлЛ FAQ рк╕рлЗркХрлНрк╢рки ркЬрлБркУ, 2) support@bustracker.com рккрк░ рк╕рккрлЛрк░рлНркЯркирлЛ рк╕ркВрккрк░рлНркХ ркХрк░рлЛ, 3) ркЕркорк╛рк░рлА 24/7 рк╣рлЗрк▓рлНрккрк▓рк╛ркИркиркирлЗ ркХрлЛрк▓ ркХрк░рлЛ.",
    default: "рк╣рлБркВ рк╕ркоркЬрлА ркЧркпрлЛ ркХрлЗ ркдркорлЗ ркмрк╕ рк╕рлЗрк╡рк╛ркУ рк╡рк┐рк╢рлЗ рккрлВркЫрлА рк░рк╣рлНркпрк╛ ркЫрлЛ. ркдркоркирлЗ ркХркИ ркмрк╛ркмркдркорк╛ркВ ркоркжркж ркЬрлЛркИркП ркЫрлЗ ркдрлЗ рк╡ркзрлБ рк╕рлНрккрк╖рлНркЯркдрк╛ркерлА ркХрк╣рлА рк╢ркХрк╢рлЛ?"
  },
  kn: {
    greeting: "р▓ир▓ор▓╕р│Нр▓Хр▓╛р▓░! р▓ир▓╛р▓ир│Б р▓ир▓┐р▓ор│Нр▓о BusTracker р▓╕р▓╣р▓╛р▓пр▓Х. р▓Зр▓Вр▓жр│Б р▓ир▓╛р▓ир│Б р▓ир▓┐р▓ор▓Чр│Ж р▓╣р│Зр▓Чр│Ж р▓╕р▓╣р▓╛р▓п р▓ор▓╛р▓бр▓мр▓╣р│Бр▓жр│Б?",
    nextBus: "р▓ир▓┐р▓ор│Нр▓о р▓ор▓╛р▓░р│Нр▓Чр▓жр▓▓р│Нр▓▓р▓┐ р▓ор│Бр▓Вр▓жр▓┐р▓и р▓мр▓╕р│Н 8 р▓ир▓┐р▓ор▓┐р▓╖р▓Чр▓│р▓▓р│Нр▓▓р▓┐ р▓мр▓░р│Бр▓др│Нр▓др▓┐р▓жр│Ж. р▓ир▓╛р▓ир│Б р▓Тр▓Вр▓жр│Б р▓Ер▓зр▓┐р▓╕р│Вр▓Ър▓ир│Жр▓пр▓ир│Нр▓ир│Б р▓╣р│Кр▓Вр▓жр▓┐р▓╕р▓мр│Зр▓Хр│З?",
    routes: "р▓ир▓Чр▓░р▓Хр│Нр▓Хр│Ж р▓╣р│Лр▓Чр│Бр▓╡ р▓ор▓╛р▓░р│Нр▓Чр▓Чр▓│р│Б: 42A (8 р▓ир▓┐р▓ор▓┐р▓╖), 15B (15 р▓ир▓┐р▓ор▓┐р▓╖), 23C (22 р▓ир▓┐р▓ор▓┐р▓╖). р▓ир│Ар▓╡р│Б р▓пр▓╛р▓╡р│Бр▓жр▓ир│Нр▓ир│Б р▓Яр│Нр▓░р│Нр▓пр▓╛р▓Хр│Н р▓ор▓╛р▓бр▓▓р│Б р▓мр▓пр▓╕р│Бр▓др│Нр▓др│Ар▓░р▓┐?",
    busStatus: "р▓мр▓╕р│Н 42A р▓ор│Зр▓ир│Н р▓╕р│Нр▓Яр│Нр▓░р│Ар▓Яр│НтАМр▓ир▓▓р│Нр▓▓р▓┐ р▓Яр│Нр▓░р▓╛р▓лр▓┐р▓Хр│НтАМр▓ир▓┐р▓Вр▓жр▓╛р▓Чр▓┐ 3 р▓ир▓┐р▓ор▓┐р▓╖ р▓др▓бр▓╡р▓╛р▓Чр▓┐ р▓Ур▓бр│Бр▓др│Нр▓др▓┐р▓жр│Ж. р▓Ер▓кр│НтАМр▓бр│Зр▓Яр│Н р▓ор▓╛р▓бр▓┐р▓ж ETA 11 р▓ир▓┐р▓ор▓┐р▓╖р▓Чр▓│р│Б.",
    setAlarm: "р▓ир▓╛р▓ир│Б р▓Ер▓▓р▓╛р▓░р▓В р▓╣р│Кр▓Вр▓жр▓┐р▓╕р▓▓р│Б р▓╕р▓╣р▓╛р▓п р▓ор▓╛р▓бр│Бр▓др│Нр▓др│Зр▓ир│Ж! р▓ир▓┐р▓ор▓Чр│Ж р▓пр▓╛р▓╡ р▓мр▓╕р│Н р▓ор▓др│Нр▓др│Б р▓ир▓┐р▓▓р│Нр▓жр▓╛р▓гр▓Хр│Нр▓Хр│Ж р▓Ер▓зр▓┐р▓╕р│Вр▓Ър▓ир│Ж р▓мр│Зр▓Хр│Б?",
    problem: "р▓╕р▓ор▓╕р│Нр▓пр│Жр▓п р▓мр▓Чр│Нр▓Чр│Ж р▓Хр│Зр▓│р▓┐ р▓╡р▓┐р▓╖р▓╛р▓жр▓╡р▓╛р▓пр▓┐р▓др│Б. р▓жр▓пр▓╡р▓┐р▓Яр│Нр▓Яр│Б р▓╕р▓ор▓╕р│Нр▓пр│Жр▓пр▓ир│Нр▓ир│Б р▓╡р▓┐р▓╡р▓░р▓┐р▓╕р▓┐ р▓ор▓др│Нр▓др│Б р▓ир▓ор│Нр▓о р▓мр│Жр▓Вр▓мр▓▓ р▓др▓Вр▓бр▓Хр│Нр▓Хр│Ж р▓╡р▓░р▓жр▓┐ р▓ор▓╛р▓бр▓▓р│Б р▓╕р▓╣р▓╛р▓п р▓ор▓╛р▓бр│Бр▓др│Нр▓др│Зр▓ир│Ж.",
    startTrip: "р▓кр│Нр▓░р▓пр▓╛р▓гр▓╡р▓ир│Нр▓ир│Б р▓кр│Нр▓░р▓╛р▓░р▓Вр▓нр▓┐р▓╕р▓▓р│Б: 1) р▓ир▓┐р▓ор│Нр▓о р▓мр▓╕р│Н р▓╕р▓Вр▓Цр│Нр▓пр│Ж р▓╕р▓░р▓┐р▓пр▓╛р▓Чр▓┐р▓жр│Ж р▓Ор▓Вр▓жр│Б р▓Цр▓Ър▓┐р▓др▓кр▓бр▓┐р▓╕р▓┐р▓Хр│Кр▓│р│Нр▓│р▓┐, 2) р▓╣р▓╕р▓┐р▓░р│Б 'р▓кр│Нр▓░р▓пр▓╛р▓г р▓кр│Нр▓░р▓╛р▓░р▓Вр▓нр▓┐р▓╕р▓┐' р▓мр▓Яр▓ир│Н р▓Тр▓др│Нр▓др▓┐, 3) GPS р▓Яр│Нр▓░р│Нр▓пр▓╛р▓Хр▓┐р▓Вр▓Чр│Н р▓╕р│Нр▓╡р▓пр▓Вр▓Ър▓╛р▓▓р▓┐р▓др▓╡р▓╛р▓Чр▓┐ р▓кр│Нр▓░р▓╛р▓░р▓Вр▓нр▓╡р▓╛р▓Чр│Бр▓др│Нр▓др▓жр│Ж.",
    updateBus: "р▓мр▓╕р│Н р▓╕р▓Вр▓Цр│Нр▓пр│Жр▓пр▓ир│Нр▓ир│Б р▓Ер▓кр│НтАМр▓бр│Зр▓Яр│Н р▓ор▓╛р▓бр▓▓р│Б, р▓ир▓┐р▓ор│Нр▓о р▓кр│Нр▓░р▓╕р│Нр▓др│Бр▓д р▓мр▓╕р│Н р▓╕р▓Вр▓Цр│Нр▓пр│Жр▓п р▓кр▓Хр│Нр▓Хр▓жр▓▓р│Нр▓▓р▓┐р▓░р│Бр▓╡ 'р▓Ор▓бр▓┐р▓Яр│Н' р▓мр▓Яр▓ир│Н р▓Яр│Нр▓пр▓╛р▓кр│Н р▓ор▓╛р▓бр▓┐ р▓ор▓др│Нр▓др│Б р▓╣р│Кр▓╕ р▓╕р▓Вр▓Цр│Нр▓пр│Жр▓пр▓ир│Нр▓ир│Б р▓ир▓ор│Вр▓жр▓┐р▓╕р▓┐.",
    gpsIssues: "GPS р▓╕р▓ор▓╕р│Нр▓пр│Жр▓Чр▓│р▓┐р▓жр│Нр▓жр▓░р│Ж, р▓кр│Нр▓░р▓пр▓др│Нр▓ир▓┐р▓╕р▓┐: 1) р▓ир▓┐р▓ор│Нр▓о р▓╕р│Нр▓ер▓╛р▓и р▓Ер▓ир│Бр▓ор▓др▓┐р▓Чр▓│р▓ир│Нр▓ир│Б р▓кр▓░р▓┐р▓╢р│Ар▓▓р▓┐р▓╕р▓┐, 2) р▓Ер▓кр│Нр▓▓р▓┐р▓Хр│Зр▓╢р▓ир│Н р▓Ер▓ир│Нр▓ир│Б р▓ор▓░р│Бр▓кр│Нр▓░р▓╛р▓░р▓Вр▓нр▓┐р▓╕р▓┐, 3) р▓╕р▓ор▓╕р│Нр▓пр│Ж р▓ор│Бр▓Вр▓жр│Бр▓╡р▓░р▓┐р▓жр▓░р│Ж р▓мр│Жр▓Вр▓мр▓▓р▓╡р▓ир│Нр▓ир│Б р▓╕р▓Вр▓кр▓░р│Нр▓Хр▓┐р▓╕р▓┐.",
    endShift: "р▓ир▓┐р▓ор│Нр▓о р▓╢р▓┐р▓лр│Нр▓Яр│Н р▓ор│Бр▓Чр▓┐р▓╕р▓▓р│Б, р▓Хр│Жр▓Вр▓кр│Б 'р▓кр│Нр▓░р▓пр▓╛р▓г р▓ор│Бр▓Чр▓┐р▓╕р▓┐' р▓мр▓Яр▓ир│Н р▓Тр▓др│Нр▓др▓┐. р▓Зр▓жр│Б GPS р▓Яр│Нр▓░р│Нр▓пр▓╛р▓Хр▓┐р▓Вр▓Чр│Н р▓ир▓┐р▓▓р│Нр▓▓р▓┐р▓╕р│Бр▓др│Нр▓др▓жр│Ж р▓ор▓др│Нр▓др│Б р▓ир▓┐р▓ор│Нр▓о р▓кр│Нр▓░р▓пр▓╛р▓гр▓ж р▓Ер▓╡р▓зр▓┐р▓пр▓ир│Нр▓ир│Б р▓▓р▓╛р▓Чр│Н р▓ор▓╛р▓бр│Бр▓др│Нр▓др▓жр│Ж.",
    support: "р▓др▓╛р▓Вр▓др│Нр▓░р▓┐р▓Х р▓мр│Жр▓Вр▓мр▓▓р▓Хр│Нр▓Хр▓╛р▓Чр▓┐: 1) р▓ир▓ор│Нр▓о FAQ р▓╡р▓┐р▓нр▓╛р▓Чр▓╡р▓ир│Нр▓ир│Б р▓ир│Лр▓бр▓┐, 2) support@bustracker.com р▓ир▓▓р│Нр▓▓р▓┐ р▓мр│Жр▓Вр▓мр▓▓р▓╡р▓ир│Нр▓ир│Б р▓╕р▓Вр▓кр▓░р│Нр▓Хр▓┐р▓╕р▓┐, 3) р▓ир▓ор│Нр▓о 24/7 р▓╕р▓╣р▓╛р▓пр▓╡р▓╛р▓гр▓┐р▓Чр│Ж р▓Хр▓░р│Ж р▓ор▓╛р▓бр▓┐.",
    default: "р▓ир│Ар▓╡р│Б р▓мр▓╕р│Н р▓╕р│Зр▓╡р│Жр▓Чр▓│ р▓мр▓Чр│Нр▓Чр│Ж р▓Хр│Зр▓│р│Бр▓др│Нр▓др▓┐р▓░р│Бр▓╡р▓┐р▓░р▓┐ р▓Ор▓Вр▓жр│Б р▓ир▓╛р▓ир│Б р▓Ер▓░р│Нр▓ер▓ор▓╛р▓бр▓┐р▓Хр│Кр▓Вр▓бр▓┐р▓жр│Нр▓жр│Зр▓ир│Ж. р▓ир▓┐р▓ор▓Чр│Ж р▓пр▓╛р▓╡ р▓╡р▓┐р▓╖р▓пр▓жр▓▓р│Нр▓▓р▓┐ р▓╕р▓╣р▓╛р▓п р▓мр│Зр▓Хр│Б р▓Ор▓Вр▓мр│Бр▓жр▓ир│Нр▓ир│Б р▓╣р│Жр▓Ър│Нр▓Ър│Б р▓ир▓┐р▓░р│Нр▓жр▓┐р▓╖р│Нр▓Яр▓╡р▓╛р▓Чр▓┐ р▓╣р│Зр▓│р▓мр▓╣р│Бр▓жр│З?"
  }
};

export function ChatBot({ userRole }: ChatBotProps) {
  const [isOpen, setIsOpen] = useState(false);
  const [messages, setMessages] = useState<Message[]>([]);
  const [inputMessage, setInputMessage] = useState('');
  const [currentLanguage, setCurrentLanguage] = useState<string>('en');
  const [isListening, setIsListening] = useState(false);
  const [voiceEnabled, setVoiceEnabled] = useState(true);
  const messagesEndRef = useRef<HTMLDivElement>(null);
  const inputRef = useRef<HTMLInputElement>(null);

  const scrollToBottom = () => {
    messagesEndRef.current?.scrollIntoView({ behavior: "smooth" });
  };

  useEffect(() => {
    scrollToBottom();
  }, [messages]);

  useEffect(() => {
    if (isOpen && messages.length === 0) {
      // Send welcome message
      const welcomeMessage: Message = {
        id: Date.now().toString(),
        text: responses[currentLanguage as keyof typeof responses]?.greeting || responses.en.greeting,
        sender: 'bot',
        timestamp: new Date(),
        language: currentLanguage
      };
      setMessages([welcomeMessage]);
    }
  }, [isOpen, currentLanguage]);

  const getResponse = (userMessage: string, language: string): string => {
    const langResponses = responses[language as keyof typeof responses] || responses.en;
    const message = userMessage.toLowerCase();

    if (message.includes('next bus') || message.includes('when') || message.includes('рдЕрдЧрд▓реА рдмрд╕') || message.includes('ржкрж░ржмрж░рзНрждрзА ржмрж╛рж╕') || 
        message.includes('роЕроЯрпБродрпНрод рокрпЗро░рпБроирпНродрпБ') || message.includes('р░др░жр▒Бр░кр░░р░┐ р░мр░╕р▒Н') || message.includes('рдкреБрдврдЪреА рдмрд╕') || 
        message.includes('ркЖркЧрк│ркирлА ркмрк╕') || message.includes('р▓ор│Бр▓Вр▓жр▓┐р▓и р▓мр▓╕р│Н')) {
      return langResponses.nextBus;
    } else if (message.includes('route') || message.includes('downtown') || message.includes('рд░реВрдЯ') || message.includes('рж╢рж╣рж░') || 
               message.includes('ро╡ро┤ро┐родрпНродроЯ') || message.includes('р░░р▒Вр░Яр▒Н') || message.includes('рдорд╛рд░реНрдЧ') || 
               message.includes('рк░рлВркЯ') || message.includes('р▓ор▓╛р▓░р│Нр▓Ч')) {
      return langResponses.routes;
    } else if (message.includes('42a') || message.includes('late') || message.includes('status') || message.includes('рджреЗрд░реА') || 
               message.includes('ржжрзЗрж░рж┐') || message.includes('родро╛роородроорпН') || message.includes('р░Жр░▓р░╕р▒Нр░пр░В') || 
               message.includes('рдЙрд╢реАрд░') || message.includes('ркорлЛркбрлБркВ') || message.includes('р▓др▓бр▓╡р▓╛р▓Чр▓┐')) {
      return langResponses.busStatus;
    } else if (message.includes('alarm') || message.includes('notification') || message.includes('рдЕрд▓рд╛рд░реНрдо') || 
               message.includes('ржЕрзНржпрж╛рж▓рж╛рж░рзНржо') || message.includes('роЕро▓ро╛ро░роорпН') || message.includes('р░Ер░▓р░╛р░░р░В') || 
               message.includes('рдЕрд▓рд╛рд░реНрдо') || message.includes('ркЕрк▓рк╛рк░рлНрко') || message.includes('р▓Ер▓▓р▓╛р▓░р▓В')) {
      return langResponses.setAlarm;
    } else if (message.includes('problem') || message.includes('issue') || message.includes('рд╕рдорд╕реНрдпрд╛') || 
               message.includes('рж╕ржорж╕рзНржпрж╛') || message.includes('роЪро┐роХрпНроХро▓рпН') || message.includes('р░╕р░ор░╕р▒Нр░п') || 
               message.includes('рд╕рдорд╕реНрдпрд╛') || message.includes('рк╕ркорк╕рлНркпрк╛') || message.includes('р▓╕р▓ор▓╕р│Нр▓пр│Ж')) {
      return langResponses.problem;
    } else if (message.includes('start trip') || message.includes('рдпрд╛рддреНрд░рд╛ рд╢реБрд░реВ') || message.includes('ржЯрзНрж░рж┐ржк рж╢рзБрж░рзБ') || 
               message.includes('рокропрогроорпН родрпКроЯроЩрпНроХрпБ') || message.includes('р░ЯреНрд░рд┐рдк рд╢реБрд░реВ') || message.includes('рдЯреНрд░рд┐рдк рд╕реБрд░реВ') || 
               message.includes('ркЯрлНрк░рк┐ркк рк╢рк░рлВ') || message.includes('р▓кр│Нр▓░р▓пр▓╛р▓г р▓кр│Нр▓░р▓╛р▓░р▓Вр▓н')) {
      return langResponses.startTrip;
    } else if (message.includes('bus number') || message.includes('update') || message.includes('рдмрд╕ рдирдВрдмрд░') || 
               message.includes('ржмрж╛рж╕ ржиржорзНржмрж░') || message.includes('рокрпЗро░рпБроирпНродрпБ роОрогрпН') || message.includes('р░мр░╕р▒Н р░ир░Вр░мр░░р▒Н') || 
               message.includes('рдмрд╕ рдирдВрдмрд░') || message.includes('ркмрк╕ ркиркВркмрк░') || message.includes('р▓мр▓╕р│Н р▓╕р▓Вр▓Цр│Нр▓пр│Ж')) {
      return langResponses.updateBus;
    } else if (message.includes('gps') || message.includes('location') || message.includes('рд╕реНрдерд╛рди') || 
               message.includes('ржЕржмрж╕рзНржерж╛ржи') || message.includes('роЗроЯроорпН') || message.includes('р░╕р▒Нр░ер░╛р░ир░В') || 
               message.includes('рд╕реНрдерд╛рди') || message.includes('рк╕рлНркерк╛рки') || message.includes('р▓╕р│Нр▓ер▓╛р▓и')) {
      return langResponses.gpsIssues;
    } else if (message.includes('end') || message.includes('shift') || message.includes('рд╢рд┐рдлреНрдЯ') || 
               message.includes('рж╢рж┐ржлржЯ') || message.includes('ро╖ро┐рокрпНроЯрпН') || message.includes('р░╖р░┐р░лр▒Нр░Яр▒Н') || 
               message.includes('рд╢рд┐рдлреНрдЯ') || message.includes('рк╢рк┐рклрлНркЯ') || message.includes('р▓╢р▓┐р▓лр│Нр▓Яр│Н')) {
      return langResponses.endShift;
    } else if (message.includes('support') || message.includes('help') || message.includes('рд╕рд╣рд╛рдпрддрд╛') || 
               message.includes('рж╕рж╛рж╣рж╛ржпрзНржп') || message.includes('роЙродро╡ро┐') || message.includes('р░╕р░╣р░╛р░пр░В') || 
               message.includes('рдорджрдд') || message.includes('ркоркжркж') || message.includes('р▓╕р▓╣р▓╛р▓п')) {
      return langResponses.support;
    } else {
      return langResponses.default;
    }
  };

  const sendMessage = (messageText?: string) => {
    const text = messageText || inputMessage.trim();
    if (!text) return;

    const userMessage: Message = {
      id: Date.now().toString(),
      text,
      sender: 'user',
      timestamp: new Date(),
      language: currentLanguage
    };

    setMessages(prev => [...prev, userMessage]);
    setInputMessage('');

    // Simulate bot response delay
    setTimeout(() => {
      const botResponse: Message = {
        id: (Date.now() + 1).toString(),
        text: getResponse(text, currentLanguage),
        sender: 'bot',
        timestamp: new Date(),
        language: currentLanguage
      };

      setMessages(prev => [...prev, botResponse]);

      // Text-to-speech for bot responses
      if (voiceEnabled && 'speechSynthesis' in window) {
        const utterance = new SpeechSynthesisUtterance(botResponse.text);
        utterance.lang = currentLanguage === 'en' ? 'en-IN' : 
                         currentLanguage === 'hi' ? 'hi-IN' : 
                         currentLanguage === 'bn' ? 'bn-IN' : 
                         currentLanguage === 'ta' ? 'ta-IN' : 
                         currentLanguage === 'te' ? 'te-IN' : 
                         currentLanguage === 'mr' ? 'mr-IN' : 
                         currentLanguage === 'gu' ? 'gu-IN' : 
                         currentLanguage === 'kn' ? 'kn-IN' : 'en-IN';
        utterance.rate = 0.9;
        utterance.volume = 0.7;
        speechSynthesis.speak(utterance);
      }
    }, 1000);
  };

  const startVoiceRecognition = () => {
    if ('webkitSpeechRecognition' in window || 'SpeechRecognition' in window) {
      const SpeechRecognition = (window as any).webkitSpeechRecognition || (window as any).SpeechRecognition;
      const recognition = new SpeechRecognition();
      
      recognition.lang = currentLanguage === 'en' ? 'en-IN' : 
                        currentLanguage === 'hi' ? 'hi-IN' : 
                        currentLanguage === 'bn' ? 'bn-IN' : 
                        currentLanguage === 'ta' ? 'ta-IN' : 
                        currentLanguage === 'te' ? 'te-IN' : 
                        currentLanguage === 'mr' ? 'mr-IN' : 
                        currentLanguage === 'gu' ? 'gu-IN' : 
                        currentLanguage === 'kn' ? 'kn-IN' : 'en-IN';
      recognition.continuous = false;
      recognition.interimResults = false;

      setIsListening(true);

      recognition.onresult = (event: any) => {
        const transcript = event.results[0][0].transcript;
        setInputMessage(transcript);
        setIsListening(false);
      };

      recognition.onerror = () => {
        setIsListening(false);
      };

      recognition.onend = () => {
        setIsListening(false);
      };

      recognition.start();
    }
  };

  const currentTranslations = translations[currentLanguage as keyof typeof translations] || translations.en;

  if (!isOpen) {
    return (
      <Button
        onClick={() => setIsOpen(true)}
        className="fixed bottom-4 right-4 h-14 w-14 rounded-full bg-gradient-to-r from-emerald-600 to-blue-600 hover:from-emerald-700 hover:to-blue-700 shadow-lg z-50"
        size="sm"
      >
        <MessageCircle className="w-6 h-6 text-white" />
      </Button>
    );
  }

  return (
    <div className="fixed bottom-4 right-4 w-80 max-w-[calc(100vw-2rem)] h-[32rem] bg-white rounded-2xl shadow-2xl border border-gray-200 z-50 flex flex-col">
      {/* Chat Header */}
      <div className="bg-gradient-to-r from-emerald-600 to-blue-600 text-white p-3 rounded-t-2xl flex items-center justify-between shrink-0">
        <div className="flex items-center space-x-2">
          <Bot className="w-4 h-4" />
          <h3 className="font-medium text-sm truncate">{currentTranslations.chatTitle}</h3>
        </div>
        <div className="flex items-center space-x-1">
          {/* Language Selector */}
          <select
            value={currentLanguage}
            onChange={(e) => setCurrentLanguage(e.target.value)}
            className="bg-white/20 text-white rounded px-1 py-0.5 text-xs border-0 outline-none max-w-20"
          >
            {languages.map((lang) => (
              <option key={lang.code} value={lang.code} className="text-black">
                {lang.flag} {lang.name}
              </option>
            ))}
          </select>
          
          {/* Voice Toggle */}
          <Button
            variant="ghost"
            size="sm"
            onClick={() => setVoiceEnabled(!voiceEnabled)}
            className="text-white hover:bg-white/20 h-7 w-7 p-0"
          >
            {voiceEnabled ? <Volume2 className="w-3 h-3" /> : <VolumeX className="w-3 h-3" />}
          </Button>
          
          {/* Close Button */}
          <Button
            variant="ghost"
            size="sm"
            onClick={() => setIsOpen(false)}
            className="text-white hover:bg-white/20 h-7 w-7 p-0"
          >
            <X className="w-3 h-3" />
          </Button>
        </div>
      </div>

      {/* Messages Area */}
      <div className="flex-1 overflow-hidden">
        <div className="h-full overflow-y-auto p-3 space-y-3">
          {messages.map((message) => (
            <div key={message.id} className={`flex ${message.sender === 'user' ? 'justify-end' : 'justify-start'}`}>
              <div className={`max-w-[85%] p-2.5 rounded-xl break-words ${
                message.sender === 'user' 
                  ? 'bg-gradient-to-r from-emerald-600 to-blue-600 text-white' 
                  : 'bg-gray-100 text-gray-800'
              }`}>
                <div className="flex items-start space-x-2">
                  {message.sender === 'bot' && <Bot className="w-3 h-3 mt-0.5 text-emerald-600 shrink-0" />}
                  {message.sender === 'user' && <User className="w-3 h-3 mt-0.5 shrink-0" />}
                  <div className="flex-1 min-w-0">
                    <p className="text-sm leading-relaxed whitespace-pre-wrap">{message.text}</p>
                    <p className="text-xs opacity-70 mt-1">
                      {message.timestamp.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}
                    </p>
                  </div>
                </div>
              </div>
            </div>
          ))}
          <div ref={messagesEndRef} />
        </div>
      </div>

      {/* Quick Replies */}
      <div className="px-3 pb-2 shrink-0">
        <div className="flex flex-wrap gap-1">
          {currentTranslations.quickReplies[userRole].slice(0, 2).map((reply, index) => (
            <Button
              key={index}
              variant="outline"
              size="sm"
              onClick={() => sendMessage(reply)}
              className="text-xs h-6 px-2 rounded-full border-emerald-200 text-emerald-700 hover:bg-emerald-50 truncate max-w-32"
            >
              {reply}
            </Button>
          ))}
        </div>
      </div>

      {/* Input Area */}
      <div className="p-3 border-t border-gray-200 shrink-0">
        <div className="flex items-center space-x-2">
          <div className="flex-1 relative">
            <Input
              ref={inputRef}
              value={inputMessage}
              onChange={(e) => setInputMessage(e.target.value)}
              onKeyPress={(e) => e.key === 'Enter' && sendMessage()}
              placeholder={currentTranslations.typePlaceholder}
              className="pr-10 h-9 text-sm"
              disabled={isListening}
            />
            {isListening && (
              <div className="absolute right-3 top-1/2 transform -translate-y-1/2">
                <div className="w-2 h-2 bg-red-500 rounded-full animate-pulse"></div>
              </div>
            )}
          </div>
          
          {/* Voice Input Button */}
          <Button
            variant="ghost"
            size="sm"
            onClick={startVoiceRecognition}
            className="h-9 w-9 p-0 text-emerald-600 hover:bg-emerald-50"
            disabled={isListening}
          >
            {isListening ? <MicOff className="w-4 h-4" /> : <Mic className="w-4 h-4" />}
          </Button>
          
          {/* Send Button */}
          <Button
            onClick={() => sendMessage()}
            className="h-9 bg-gradient-to-r from-emerald-600 to-blue-600 hover:from-emerald-700 hover:to-blue-700"
            size="sm"
            disabled={!inputMessage.trim() || isListening}
          >
            <Send className="w-4 h-4" />
          </Button>
        </div>
        
        {isListening && (
          <p className="text-xs text-center mt-2 text-muted-foreground">
            {currentTranslations.listening}
          </p>
        )}
      </div>
    </div>
  );
}